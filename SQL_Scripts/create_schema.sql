CREATE TABLE IF NOT EXISTS Movies (
  MovieID INTEGER PRIMARY KEY,
  MovieTitle VARCHAR(255) NOT NULL,
  ReleaseDate DATE NOT NULL,
  Genre VARCHAR(100) NOT NULL,
  Length INTEGER NOT NULL,
  RentalRate DECIMAL(5, 2) NOT NULL
);

CREATE TABLE IF NOT EXISTS Customers (
  CustomerID INTEGER PRIMARY KEY,
  CustomerName VARCHAR(255) NOT NULL,
  CustomerEmail VARCHAR(255) UNIQUE NOT NULL,
  CustomerPhone VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS Staff (
  StaffID INTEGER PRIMARY KEY,
  StaffName VARCHAR(255) NOT NULL,
  StaffEmail VARCHAR(255) UNIQUE NOT NULL,
  StaffPhone VARCHAR(20) NOT NULL,
  StartDate DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS RentalRecords (
  RentalID INTEGER PRIMARY KEY,
  MovieID INTEGER NOT NULL,
  CustomerID INTEGER NOT NULL,
  RentalRate DECIMAL(5, 2) NOT NULL,
  RentalDate DATE NOT NULL,
  ReturnDeadline DATE NOT NULL,
  ReturnDate DATE,
  LateFee DECIMAL(5, 2),
  TotalPayment DECIMAL(5, 2),
  FOREIGN KEY (MovieID) REFERENCES Movies(MovieID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

CREATE TABLE IF NOT EXISTS Ratings (
  RatingID INTEGER PRIMARY KEY,
  MovieID INTEGER NOT NULL,
  CustomerID INTEGER NOT NULL,
  RatingScore INTEGER CHECK (RatingScore BETWEEN 1 AND 10),
  Review VARCHAR(1000),
  RatingDate DATE NOT NULL,
  FOREIGN KEY (MovieID) REFERENCES Movies(MovieID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);
